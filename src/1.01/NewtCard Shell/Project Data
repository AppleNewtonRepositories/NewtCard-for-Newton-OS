// This next field can be "None", a date in format MMM DD,YYYY or "DEMO"// Remember to change first field in Settings to "BASIC Demo"constant kTimeOut:="None";//constant kTimeOut:="Nov 1,1997";constant kUpdate:=nil;constant debug:=nil;constant kChunkTrace:=nil;constant kShowCompile:=nil; // display code to be compiledprint(kAppName && kAppSymbol);if kUpdate then print("Doing an UPDATE build!!!!");if kAppSymbol<>'|NewtCard:NSB| and    kAppSymbol<>'|NewtCardShell:NSB| and   kAppSymbol<>'|NewtPlay:NSB| then begin	// NS BASIC only definitions	// The format of this next field must start "Version X.Y" & anything else ok	defconst('kkVersion,"Version 4.00 Alpha 0");	defconst('kkSignature,"NSB");	defconst('kkShellSymbol,'|BASIC:NSB|);	defconst('kRunTime, if kAppSymbol='|BASIC:NSB| then NIL else TRUE);	defconst('kFat, if kAppSymbol='|Fat:NSB| then TRUE else NIL);  endelse begin // NewtCard Definitions	defconst('kkVersion, "Version 1.01");	defconst('kkSignature,"NewtCard");	defconst('kkShellSymbol,'|NewtCard:NSB|);	defconst('kRunTime,NIL);	defconst('kFat,NIL);	end;defconst('kPlayer, strEqual(kAppName, "NewtCard Player"));		print("AppSymbol:" & sPrintObject(kAppSymbol));defconst('kShortPath,"getroot().|" & kPackageName & "|.");defconst('kShortPathA,"getroot().|" & kPackageName & "|");defconst('kStepChildren,"getroot().|" & kPackageName & "|.stepchildren");defconst('kPath,"getroot().|" & kPackageName & "|.screenview.");defconst('kMakePkgSym, '|makePkg:NSB|);defconst('kUpdater, '|updater:NSB|);defconst('kToolsSymbol, '|tools:NSB|);knownGlobalFunctions.getPkgRef:=2;knownGlobalFunctions.ConvertToUniJ:=3;knownGlobalFunctions.StrHexDump:=2;knownGlobalFunctions.charPos:=3;knownGlobalFunctions.NSDEnableBreakpoints:=1;knownGlobalFunctions.makeFontMenu:=4;knownGlobalFunctions.setClipboard:=1;knownGlobalFunctions.getClipboard:=0;partData:={}; // used for runtimedefconst('kBuildTime, sPrintObject(time()));print(datentime(time()));defconst('kU, 'U);constant kMaxChunkSize:=400; // max number of bytes in each SAVE chunk (approx)constant kAppObject:='["statement","statements"];constant kMainSub:=0;defconst('kSysEntry, {tag: "",							userLevel: 1,   					  inputPrompt: "? ",   					  io: "SCREEN",   					  printDepth: 1,   					  listWidgets: NIL,   					  programName: "",   					  font: nil,   					  extr: {connect: "Connected." & unicodeCR & "* "},   					  mdem: {connect: "Connected." & unicodeCR & "* ",   					  	phone: NIL},   					  mmnp: {connect: "Connected." & unicodeCR & "* ",   					  	HWflow: nil, SWFLOW: nil, phone: NIL},						  infr: {connect: "Connected. * "},							slt1: {connect: "Connected." & unicodeCR & "* "},   					  slt2: {connect: "Connected." & unicodeCR & "* "},	 					  serialNumber: 0,	 					  showKeyboard: NIL,	    					  store: 1,   					  useScratch: TRUE,   					  enableBreak: NIL,						  makeFatPackage: NIL, 						  lastUser: "",						     					  });defconst('kEmptyRF, {	 		 _ch: NIL,			 _codePos: NIL,			 _codeRecPos: NIL,			 _context: 'main,			 _data: NIL,			 _dataPos: NIL,			 _dataRecPos: NIL,			 _doStack: [],			 _doStackTop: NIL,			 _errorCounter: 0,			 _forNextStack: [],			 _forNextTop: NIL,			 _gosubStack: [],			 _hideUserViewsRunning: NIL,			 _inputCompiled: NIL,			 _inputError: NIL,			 _inputFlag: NIL,			 _inputLineHold: "",			 _inputPtr: NIL,			 _inputStack: [],			 	// _inputStack holds results from the input stream until an INPUT statement can get it.				// It is used in the exInputArg function			 _lastLineNo: 0, // used in execution			 _lastStmtNo: 0, // used in editing			 _loading: NIL,  // set during program load for SUB statements			 _openFiles: [],			 _printLine: "",			 _printPending: NIL,			 _runFlag: NIL,			 /* This says how program execution should go next.					It is set to NIL if there is an INPUT statement or the program is stopped.					It is set to 0 to go to the next line number in the program					Setting it to a line number causes a GOTO that line number */				 _runState: NIL,			 /* _runState says if the program is running. It stays TRUE, even if in an INPUT statement */			 			 _thenLevel: 0,			 _trace: nil,			 _userViews: [],		 	 _waitOutstanding: nil,		 	 FSTAT: nil;				});defconst('kEmptySubRF, {	 		 _ch: NIL,			 _codePos: NIL,			 _codeRecPos: NIL,			 _context: 'TBA,			 _data: NIL,			 _dataPos: NIL,			 _dataRecPos: NIL,			 _doStack: [],			 _doStackTop: NIL,			 _errorCounter: 0,			 _forNextStack: [],			 _forNextTop: NIL,			 _gosubStack: [],			 _hideUserViewsRunning: NIL,			 _lastLineNo: 0, // used in execution			 _lastStmtNo: 0, // used in editing			 _runFlag: NIL,			 _thenLevel: 0,			 _userViews: [],				});			 constant kSoupIndexes:='[{structure: slot, path: ID, type: int, rev: 4},												 {structure: slot, path: name, type: string}];defconst('kWorkQuerySpec, {indexPath: 'ID});constant kAlpha:="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_$'.";constant kNumeric:="0123456789.";defconst('kAlphaNumeric,kAlpha & kNumeric);constant kOperator:="+-/*()=<>&";constant kCompareOps:="=<>";defconst('kSeparators, kOperator & kCompareOps & " ");constant spaces:="          ";defconst('quote,sPrintObject(chr(34)));defconst('CR,sPrintObject(chr(13)));defconst('LF,sPrintObject(chr(10)));defconst('BS,sPrintObject(chr(8)));defconst('kCharList,kalpha & "9876543210" & kOperator & " abcdefghijklmnopqrstuvwxyz");defconst('kcharListLen, strLen(kCharList));//defconst('printFormat, protoPrintFormat);constant kExpertBrowse := 0;constant kExpertScript := 1;constant kExpertExpert := 2;defconst('kError1,["Error 1 - Incorrect Data Type" & CR]);defconst('kError2,["Error 2 - Statement or syntax invalid" & CR]);defconst('kError3,["Error 3 - READ/DATA types inconsistant" & CR]);defconst('kError4,["Error 4 - Invalid Checksum on Runtime" & CR]);defconst('kError5,["Error 5 - Statement Number" & CR]);defconst('kError6,["Error 6 - Internal Error saving line" & CR]);defconst('kError7,["Error 7 - Label already exists" & CR]);defconst('kError8,["Error 8 - Renumber overlap" & CR]);defconst('kError9,["Error 9 - Invalid Label" & CR]);defconst('kError10,["Error 10 - Expected a variable" & CR]);defconst('kError11,["Error 11 - Parenthesis" & CR]);defconst('kError12,["Error 12 - Label not found" & CR]);defconst('kError13,["Error 13 - Line Number" & CR]);defconst('kError14,["Error 14 - Out of Memory" & CR]);defconst('kError15,["Error 15 - End of DATA" & CR]);defconst('kError16,["Error 16 - Arithmetic" & CR]);defconst('kError17,["Error 17 - Expected a Number" & CR]);defconst('kError18,["Error 18 - Undefined Variable" & CR]);defconst('kError19,["Error 19 - RETURN - No GOSUB" & CR]);defconst('kError20,["Error 20 - Unknown Func or Sub" & CR]);defconst('kError21,["Error 21 - FOR - No Next" & CR]);defconst('kError22,["Error 22 - NEXT - No FOR" & CR]);defconst('kError23,["Error 23 - No such widget" & CR]);defconst('kError24,["Error 24 - Invalid WindowSpec" & CR]);defconst('kError25,["Error 25 - Unknown Window" & CR]);defconst('kError26,["Error 26 - Must be 1st stmt in sub" & CR]);defconst('kError27,["Error 27 - Sub already exists" & CR]);defconst('kError29,["Error 29 - Expression" & CR]);defconst('kError30,["Error 30 - Object is read only" & CR]);defconst('kError31,["Error 31 - Subscript or Frame error" & CR]);defconst('kError32,["Error 32 - Program must be SAVEd" & CR]);defconst('kError34,["Error 34 - Not a bitmap" & CR]);defconst('kError35,["Error 35 - MakePkg not installed" & CR]);defconst('kError36,["Error 36 - VisualDesigner not installed" & CR]);defconst('kError37,["Error 37 - PackMan not installed" & CR]);defconst('kError38,["Error 38 - No such field on card" & CR]);defconst('kError39,["Error 39 - Cannot override SUB stmt" & CR]);defconst('kError40,["Error 40 - Error in Button or Field" & CR]);defconst('kError46,["Error 46 - Input Error" & CR]);defconst('kError48,["Error 48 - Incorrect SAVE version" & CR]);defconst('kError49,["Error 49 - Expected a frame" & CR]);defconst('kError50,["Error 50 - Expected an array" & CR]);defconst('kError51,["Error 51 - Expected a string" & CR]);defconst('kError52,["Error 52 - Expected a frame or array" & CR]);defconst('kError53,["Error 53 - Expected a number" & CR]);defconst('kError54,["Error 54 - Expected an integer" & CR]);defconst('kError55,["Error 55 - Expected a character" & CR]);defconst('kError56,["Error 56 - Expected a binary object" & CR]);defconst('kError57,["Error 57 - Expected a path exp, symbol or integer" & CR]);defconst('kError59,["Error 59 - Zero step" & CR]);defconst('kError60,["Error 60 - LOOP without DO" & CR]);defconst('kError61,["Error 61 - EXIT not in loop" & CR]);defconst('kError63,["Error 63 - Incorrect # of args" & CR]);defconst('kError64,["Error 64 - Expected a symbol" & CR]);defconst('kError65,["Error 65 - Expected a function" & CR]);defconst('kError87,["Error 87 - Missing ELSE or ENDIF" & CR]);defconst('kError88,["Error 88 - Unexpected ELSE,ENDIF" & CR]);defconst('kError99,["Error 99 - Unexpected Error" & CR]);defconst('kErrorM1,["I/O Error 1 - Illegal file name" & CR]);defconst('kErrorM2,["I/O Error 2 - Illegal key" & CR]);defconst('kErrorM3,["I/O Error 3 - Opened without keys" & CR]);defconst('kErrorM4,["I/O Error 4 - Incorrect key type" & CR]);defconst('kErrorM5,["I/O Error 5 - File already Exists" & CR]);defconst('kErrorM6,["I/O Error 6 - End of file" & CR]);defconst('kErrorM9,["I/O Error 9 - App not found" & CR]);defconst('kErrorM10,["I/O Error 10 - File not found" & CR]);defconst('kErrorM11,["I/O Error 11 - Not a Newton Book" & CR]);defconst('kErrorM12,["I/O Error 12 - no key on OPEN" & CR]);defconst('kErrorM13,["I/O Error 13 - Channel not open" & CR]);defconst('kErrorM14,["I/O Error 14 - Error creating file" & CR]);defconst('kErrorM20,["I/O Error 20 - Connect failed" & CR]);defconst('kErrorM21,["I/O Error 21 - Buffer overrun" & CR]);defconst('kErrorM22,["I/O Error 22 - Comms timed out" & CR]);defconst('kErrorM23,["I/O Error 23 - Port in use" & CR]);defconst('kErrorM24,["I/O Error 24 - No such port" & CR]);defconst('kErrorM25,["I/O Error 25 - Comms output overun" & CR]);defconst('kErrorM26,["I/O Error 26 - Modem not found" & CR]);defconst('kErrorM27,["I/O Error 27 - No dial tone" & CR]);defconst('kErrorM28,["I/O Error 28 - No answer" & CR]);defconst('kErrorM29,["I/O Error 29 - Line busy" & CR]);defconst('kErrorM30,["I/O Error 30 - Modem not responding" & CR]);defconst('kErrorM31,["I/O Error 31 - Modem connect failed" & CR]);defconst('kErrorM32,["I/O Error 32 - Error correct failed" & CR]);defconst('kErrorM33,["I/O Error 33 - Lost connection" & CR]);defconst('kErrorM34,["I/O Error 34 - Invalid phone number" & CR]);defconst('kErrorM35,["I/O Error 35 - Port not connected" & CR]);defconst('kErrorM36,["I/O Error 36 - Output jammed" & CR]);defconst('kKeyword,["REM","LET","IF","GOTO","GOSUB","RETURN","FOR","NEXT","ON","READ","DATA","RESTORE","DIM","INPUT","PRINT","DELETE","RANDOMIZE","CHAIN","CLS","END","STOP","BYE","THEN","TO","STEP","AND","OR","NOT","NIL","TRUE","BEEP","ELSE","ERROR","TRACE","OFF","OPEN","GET","PUT","DEL","CREATE","ENTER","MOD","DIV","HWINPUT","WINDOW","SHOW","HIDE","WPRINT","ESPY","NEWYORK","GENEVA","WAIT","ENVIRON","FUNCTION","DEF","WDRAW", "ERASE","HPPRINT","CLOSE","EDIT","SETICON","MAKEPACKAGE","DO","LOOP","UNTIL","WHILE","EXIT","ELSEIF","ENDIF","CALL","SUB","ENDSUB"]);// These statements require no further interpretationconstant kREM:=1;constant kDATA:=2;// These statements get run through the interpreterconstant kLET:=21;constant kRANDOMIZE:=22;constant kTRACE:=23;constant kWINDOW:=24;constant kSHOW:=25;constant kHIDE:=26;constant kWPRINT:=27;constant kFUNCTION:=28;constant kDEF:=29;constant kWDRAW:=30;constant kBEEP:=31;constant kFOR:=32;constant kNEXT:=33;constant kGOTO:=34;constant kGOSUB:=35;constant kRETURN:=36;constant kBYE:=37;constant kCHAIN:=38;constant kCLS:=39;constant kCREATE:=40;constant kOPEN:=41;constant kGET:=42;constant kPUT:=43;constant kDEL:=44;constant kEND:=45;constant kSTOP:=46;constant kPRINT:=47;constant kIF:=48;constant kDIM:=49;constant kWAIT:=50;constant kHPPRINT:=51;constant kENVIRON:=52;constant kDELETE:=53;constant kENTER:=54;constant kERASE:=55;constant kHWINPUT:=56;constant kINPUT:=57;constant kON:=58;constant kREAD:=59;constant kRESTORE:=60;constant kCLOSE:=61;constant kSETICON:=62;constant kMAKEPACKAGE:=63;constant kIFblock:=64;constant kELSE:=65;constant kDO:=66;constant kEXIT:=67;constant kLOOP:=68;constant kEndIf:=69;constant kWidgetDef:=70;constant kSub:=71;constant kEndSub:=72;constant kCall:=73;constant kSet:=74;constant kFind:=75;constant kGo:=76;defconst('kStatements,["REM","DATA",			"LET","RANDOMIZE","TRACE","WINDOW","SHOW","HIDE","WPRINT","FUNCTION","DEF","WDRAW","BEEP",			"IF","GOTO","GOSUB","RETURN","FOR","NEXT","ON","READ","RESTORE","DIM","INPUT",			"PRINT","DELETE","CHAIN","CLS","END","STOP","BYE","OPEN","GET","PUT","DEL",			"CREATE","ENTER","HWINPUT","WAIT","ENVIRON","ERASE","HPPRINT","CLOSE","SETICON",			"MAKEPACKAGE","IFBLOCK","ELSE","DO","EXIT","LOOP","ENDIF","WIDGETDEF",			"SUB","ENDSUB","CALL","SET","FIND","GO"]);defconst('kstatementCodes,[kREM,kDATA,			kLET,kRANDOMIZE,kTRACE,kWINDOW,kSHOW,kHIDE,kWPRINT,kFUNCTION,kDEF,kWDRAW,kBEEP,			kIF,kGOTO,kGOSUB,kRETURN,kFOR,kNEXT,kON,kREAD,kRESTORE,kDIM,kINPUT,kPRINT, 			kDELETE,kCHAIN,kCLS,kEND,kSTOP,kBYE,kOPEN,kGET,kPUT,kDEL,kCREATE,kENTER,			kHWINPUT,kWAIT,kENVIRON,kERASE,kHPPRINT,kCLOSE,kSETICON,kMAKEPACKAGE,			kIFblock,kELSE,kDO,kEXIT,kLOOP,kENDIF,kWIDGETDEF,kSUB,kENDSUB,kCALL,kSET,			kFIND,KGO]);defconst('kConstants,{        name: ["VFFILLWHITE","VFFILLLTGRAY","VFFILLGRAY",                         "VFFILLDKGRAY","VFFILLBLACK",                         "VFFRAMEWHITE", "VFFRAMELTGRAY", "VFFRAMEGRAY",                         "VFFRAMEDKGRAY", "VFFRAMEBLACK","VFFRAMEMATTE",                         "VFNONE","VFWHITE","VFLTGRAY","VFGRAY","VFDKGRAY","VFBLACK",                         "VFPEN","VFSHADOW","VFROUND",                         "VFFILLCUSTOM","VFFRAMECUSTOM",                         "RGB_GRAY0","RGB_GRAY1","RGB_GRAY2","RGB_GRAY3",                         "RGB_GRAY4","RGB_GRAY5","RGB_GRAY6","RGB_GRAY7",                         "RGB_GRAY8","RGB_GRAY9","RGB_GRAY10","RGB_GRAY11",                         "RGB_GRAY12","RGB_GRAY13","RGB_GRAY14","RGB_GRAY15",                         "VVISIBLE","VAPPLICATION","VCALCULATEBOUNDS", "VCLIPPING","VFLOATING","VREADONLY","VCLICKABLE","VNOFLAGS","VNOTHINGALLOWED","VANYTHINGALLOWED",                         "VSTROKESALLOWED","VGESTURESALLOWED","VSHAPESALLOWED","VSINGLEUNIT",                         "VCHARSALLOWED","VLETTERSALLOWED","VNAMEFIELD",                         "VPUNCTUATIONALLOWED","VCAPSREQUIRED","VNUMBERSALLOWED","VPHONEFIELD",                         "VDATEFIELD","VTIMEFIELD","VNOSPACES"],        value:[VFFILLWHITE,VFFILLLTGRAY,VFFILLGRAY,                         VFFILLDKGRAY, VFFILLBLACK,                         VFFRAMEWHITE, VFFRAMELTGRAY, VFFRAMEGRAY,                         VFFRAMEDKGRAY, VFFRAMEBLACK, VFFRAMEMATTE,                         VFNONE,VFWHITE,VFLTGRAY,VFGRAY,VFDKGRAY,VFBLACK,                         256,262144,16777216,                         VFFILLCUSTOM,VFFRAMECUSTOM,                         KRGB_GRAY0,KRGB_GRAY1,KRGB_GRAY2,KRGB_GRAY3,                         KRGB_GRAY4,KRGB_GRAY5,KRGB_GRAY6,KRGB_GRAY7,                         KRGB_GRAY8,KRGB_GRAY9,KRGB_GRAY10,KRGB_GRAY11,                         KRGB_GRAY12,KRGB_GRAY13,KRGB_GRAY14,KRGB_GRAY15,                         VVISIBLE,VAPPLICATION,VCALCULATEBOUNDS, VCLIPPING,VFLOATING,                         VREADONLY,VCLICKABLE,VNOFLAGS,VNOTHINGALLOWED,VANYTHINGALLOWED,                         VSTROKESALLOWED,VGESTURESALLOWED,VSHAPESALLOWED,VSINGLEUNIT,                         VCHARSALLOWED,VLETTERSALLOWED,VNAMEFIELD,                         VPUNCTUATIONALLOWED,VCAPSREQUIRED,VNUMBERSALLOWED,VPHONEFIELD,                         VDATEFIELD,VTIMEFIELD,VNOSPACES]});			 defconst('kCommand,["LIST","SAVE","LOAD","REPLACE","RENUM","RUN","BYE","REVUP",         "STATS","NEW","NEWPROGRAM","DIR","VARS","CON","STRIP","EDIT","TOOLS",         "MODULE"]);defconst('kCommandPickList, ["RUN","CON","LIST","REPLACE",	"NEW","NEWPROGRAM","MODULE [subroutineName]",	"RENUM","MAKEPACKAGE","REVUP","STRIP",	'pickSeparator,	"DIR","STATS","TOOLS","VARS",	'pickSeparator,	"LOAD filename",	"LIST",	"LIST [stmt[,stmt[,filename]]]",	"LIST ,,\"Clipboard\"",	"SAVE filename",	"ENTER filename[.BAS]",	"ENTER \"Clipboard\"",	"RENUM [from[,to[,step[,base]]]]",	"RUN lineNo or filename",	"DELETE filename"]);	defconst('kCommandPickListNewtCard, ["RUN","CON","LIST",	"RENUM",	'pickSeparator,	"DIR","STATS","TOOLS","VARS",	'pickSeparator,	"LIST",	"LIST [stmt[,stmt[,filename]]]",	"LIST ,,\"Clipboard\"",	"ENTER filename[.BAS]",	"ENTER \"Clipboard\"",	"RENUM [from[,to[,step[,base]]]]",	"RUN lineNo or filename",	"DELETE filename"]);	defconst('kStatementPickList, 	["next lineNo", 	"next lineNo in Edit Box", 	'pickSeparator,		"CLS",	"REM text",	"IF cond",	"THEN [stmt]",	"ELSE [stmt]",	"END IF",	"GOTO lineNo",	"GOSUB lineNo",	"FOR var=start TO end STEP",	"NEXT var",	"EXIT [FOR|DO]",	"DO [ |UNTIL|WHILE]",	"LOOP [ |UNTIL|WHILE]",	"ON cond THEN GOTO stmtList",	"READ var[,var...]",	"DATA const[,const]",	"INPUT var[,var...]",	"PRINT exp[, or ; exp...]",		'pickSeparator,	"OPEN ch,file[,key]",	"GET ch,var[,key]",	"PUT ch,var",	"DEL ch,var",		'pickSeparator,	"WIDGETDEF wSpec",	"WINDOW wNum[,wSpec[,wName]",	"SHOW wNum[,wNum...]",	"WPRINT wNum,var",	"HIDE [wNum[,wNum...]]",	"HWINPUT var[,prompt[,list]]"]);	defconst('kStatementPickListNewtCard, [	"CLS",	"REM text",	"IF cond",	"THEN [stmt]",	"ELSE [stmt]",	"END IF",	"GOTO lineNo",	"GOSUB lineNo",	"FOR var=start TO end STEP",	"NEXT var",	"EXIT [FOR|DO]",	"DO [ |UNTIL|WHILE]",	"LOOP [ |UNTIL|WHILE]",	"ON cond THEN GOTO stmtList",	"READ var[,var...]",	"DATA const[,const]",	"INPUT var[,var...]",	"PRINT exp[, or ; exp...]",		'pickSeparator,	"OPEN ch,file[,key]",	"GET ch,var[,key]",	"PUT ch,var",	"DEL ch,var",		'pickSeparator,	"WIDGETDEF wSpec",	"WINDOW wNum[,wSpec[,wName]",	"SHOW wNum[,wNum...]",	"WPRINT wNum,var",	"HIDE [wNum[,wNum...]]",	 ]);	defconst('kRenumWords,["GOTO ","GOSUB ","RESTORE","GOTO:",".GOTO","GOSUB:",".GOSUB"]);defconst('kBeeps, [ROM_bootsound, ROM_alarmwakeup, ROM_click, ROM_crumple, ROM_drawerclose,                   ROM_draweropen, ROM_flip, ROM_funbeep, ROM_hilitesound, ROM_plinkbeep,                   ROM_simpleBeep, ROM_wakeupbeep, ROM_plunk, ROM_poof]);defconst('kProgramTemplate, [ "0010 REM program template", "0020 appSpec={goto:'endProgram,title:" & quote & "Demo" & quote &"}", "0030 window app,appSpec," & quote & "APP" & quote, "0040 show app", "0050 widgetdef Layout_0", "0060 window wlist,Layout_0", "0070 show wlist", "0100 wait -1 // indefinitely", "9000 endProgram: rem", "9010 hide", "9020 stop"  ]);  // used by draw module  DefConst('delta, 36);DefConst('scrollInfo, {	up:		{x: 0, y: -delta},						down:	{x: 0, y: delta},						left:	{x: -delta, y: 0},						right:	{x: delta, y: 0}					});  // used by newButton protoPickerprint(home);if kkShellSymbol='|newtcard:NSB| then begin	if kAppSymbol='|newtcard:NSB| or kAppSymbol='|newtplay:NSB|		then print(OpenResFile(home & "NewtCard Shell:resource.rsrc"));		else print(OpenResFile(home & "resource.rsrc"));	//DefConst('iconPickerBitmap, getPictAsBits("iconPicker", nil));	DefConst('packItIcon, getPictAsBits("packItIcon", nil));	CloseResFile();	end;