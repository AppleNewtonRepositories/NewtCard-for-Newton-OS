constant kProcrastinate:=1000;defconst ('kFillPattern, setLength(SetClass(clone("\u0000000000000001"),'pattern),8));defconst ('kLinePattern, setLength(SetClass(clone("\u0000000100000001"),'pattern),8));defConst('kProperties, ["text","title","viewBounds","viewEffect",	"viewFlags","viewFont","viewFormat","viewJustify","viewValue",	"widgetName","widgetType"]);	defconst('kViewFlags,  [/* 'vvisible, */'vapplication,'vcalculatebounds,												'vclipping,'vfloating,'vreadonly,'vclickable,'vnoflags,												'vnothingallowed,'vanythingallowed, 'vstrokesallowed,												'vgesturesallowed,'vshapesallowed,'vsingleunit,'vcharsallowed,												'vlettersallowed, 'vnamefield, 'vpunctuationallowed, 'vcapsrequired,												'vnumbersallowed, 'vphonefield, 'vdatefield, 'vtimefield, 												/* 'vnospaces */]);defconst('kValues, {	bounds:  		{format: 'bounds},	boxTitle:		{format: 'string},	checkCurrentItem: {format: 'boolean},	currLabelCommand: {format: 'int},	dateFont:		{format: 'font},	editOK:			{format: 'boolean},	entryFlags:	{format: 'flags, values: kViewFlags},	gaugeDrawLimits: {format: 'boolean},	GOTO:				{format: 'eval},	GOSUB:			{format: 'eval},	hours:			{format: 'int},	indent:			{format: 'int},	label:			{format: 'string},	labelCommands: {format: 'array},	labelFont:	{format: 'font},	listItems:  {format: 'array},	minutes:		{format: 'int},	minValue:		{format: 'int},	maxValue:		{format: 'int},	pickItems:	{format: 'array},	popup:	{format: 'array},	scrollAmounts:	{format: 'eval},	selectedDate: {format: 'eval},	selectedDates: {format: 'array},	showLeadingZeros: {format: 'boolean},	tabs:				{format: 'array},	text: 			{format: 'string},	title: 			{format: 'string},	useMultipleSelections: {format: 'boolean},	useScrollers: {format: 'boolean},	value:			{format: 'int},	viewBounds: {format: 'bounds}, 	viewEffect: {format:  'effect, values: ['fxCheckerBoardEffect, 'fxBarnDoorOpenEffect,								  			'fxBarnDoorCloseEffect, 'fxVenetionBlindsEffect, 'fxIrisOpenEffect,								  			'fxIrisCloseEffect, 'fxPopDownEffect, 'fxDrawerEffect, 								  			'fxZoomOpenEffect, 'fxZoomCloseEffect, 'fxZoomVerticalEffect]},	viewFlags:	{format: 'flags, values: kViewFlags},	viewFont:		{format: 'font},	viewFormat:	{format: 'format,												fillValues: ['vfnone,'vffillwhite,'vffillltgray,'vffillgray,												'vffilldkgray,'vffillblack,'vffillcustom],												frameValues: ['vfnone,'vfframewhite,'vfframeltgray,												'vfframegray,'vfframedkgray,'vfframeblack,'vfframematte],												lineValues: ['vfnone,'vfLinesWhite,'vfLinesLtGray,'vfLinesGray,												'vfLinesDkGray,'vfLinesBlack]},	viewIdleFrequency: {format: 'int},	viewLineSpacing: {format: 'int},	viewJustify:{format: 'justify, 												horizontalValues: ['VjLeftH,'vjRightH,'vjCenterH,'vjFullH],												verticalValues: ['vjTopV,'vjCenterV,'vjBottomV,'vjFullV],												textLimitValues:['noLineLimits,'oneLineOnly, 'oneWordOnly],												unusedValues:['vjVMask,'vjParentLeftH,												'vjParentCenterH,'vjParentRightH,'vjParentFullH,'vjParentHMask,												'vjParentTopV,'vjParentCenterV,'vjParentBottomV,'vjParentFullV,												'vjParentVMask,'vjParentMask,'vjSiblingNoH,'vjSiblingCenterH,												'vjSiblingRightH,'vjSiblingFullH,'vjSiblingLeftH,'vjSiblingHMask,												'vjSiblingNoV,'vjSiblingCenterV,'vjSiblingBottomV,'vjSiblingFullV,												'vjSiblingTopV,'vjSiblingVMask,'vjSiblingMask,'vjChildrenLasso,												'vjReflow]},	viewValue:	{format: 'eval},	visible:		{format: 'boolean,},	widgetName: {format: 'string},	widgetType: {format: 'widgetType}	});								  			defconst('kfaceValues, ['kfaceNormal,'kfaceBold,'kfaceItalic,'kfaceUnderline,												'kfaceOutline,'kfaceSuperscript,'kfaceSubscript]);defconst('ksizeValues, ["9","10","12","14","18"]);constant vfPen:= 256;constant vfRound:= 16777216;constant vfInset:= 65536;constant vfShadow:= 262144;				defconst('vConstants,{	// viewFormat constants  vffillwhite: vffillwhite,	vffillltgray: vffillltgray,	vffillgray: vffillgray,	vffilldkgray: vffilldkgray,	vffillblack: vffillblack,	vffillCustom: vfCustom,	vfframewhite: vfframewhite,	vfframeltgray: vfframeltgray,	vfframegray: vfframegray,	vfframedkgray: vfframedkgray,	vfframeblack: vfframeblack,	vfframematte: vfframematte,	vfnone: vfnone,	vfwhite: vfwhite,	vfltgray: vfltgray,	vfgray: vfgray,	vfdkgray: vfdkgray,	vfblack: vfblack,	vfcustom: vfcustom,	vfmatte: vfmatte,	vfLinesWhite: vfLinesWhite,	vfLinesLtGray: vfLinesLtGray,	vfLinesGray: vfLinesGray,	vfLinesDkGray: vfLinesDkGray,	vfLinesBlack: vfLinesBlack,	vfPen: vfPen,	vfRound: vfRound,	vfInset: vfInset,	vfShadow: vfShadow,	// viewJustify constants	vjLeftH: VjLeftH,	vjRightH: vjRightH,	vjCenterH: vjCenterH,	vjFullH: vjFullH,	vjHMask: vjHMask,	vjTopV: vjTopV,	vjCenterV: vjCenterV,	vjBottomV: vjBottomV,	vjFullV: vjFullV,	vjVMask: vjVMask,	vjParentLeftH: vjParentLeftH,	vjParentCenterH: vjParentCenterH,	vjParentRightH: vjParentRightH,	vjParentFullH: vjParentFullH,	vjParentHMask: vjParentHMask,	vjParentTopV: vjParentTopV,	vjParentCenterV: vjParentCenterV,	vjParentBottomV: vjParentBottomV,	vjParentFullV: vjParentFullV,	vjParentVMask: vjParentVMask,	vjParentMask: vjParentMask,	vjSiblingNoH: vjSiblingNoH,	vjSiblingCenterH: vjSiblingCenterH,	vjSiblingRightH: vjSiblingRightH,	vjSiblingFullH: vjSiblingFullH,	vjSiblingLeftH: vjSiblingLeftH,	vjSiblingHMask: vjSiblingHMask,	vjSiblingNoV: vjSiblingNoV,	vjSiblingCenterV: vjSiblingCenterV,	vjSiblingBottomV: vjSiblingBottomV,	vjSiblingFullV: vjSiblingFullV,	vjSiblingTopV: vjSiblingTopV,	vjSiblingVMask: vjSiblingVMask,	vjSiblingMask: vjSiblingMask,	vjChildrenLasso: vjChildrenLasso,	vjReflow: vjReflow,	noLineLimits: noLineLimits,	oneLineOnly: oneLineOnly,	oneWordOnly: oneWordOnly,		// viewFlag Constants	vvisible: vvisible,	vapplication: vapplication,	vcalculatebounds: vcalculatebounds,	vclipping: vclipping,	vfloating: vfloating,	vreadonly: vreadonly,	vclickable: vclickable,	vnoflags: vnoflags,	vnothingallowed: vnothingallowed,	vanythingallowed: vanythingallowed,	vstrokesallowed: vstrokesallowed,	vgesturesallowed: vgesturesallowed,	vshapesallowed: vshapesallowed,	vsingleunit: vsingleunit,	vcharsallowed: vcharsallowed,	vlettersallowed: vlettersallowed,	vnamefield: vnamefield,	vpunctuationallowed: vpunctuationallowed,	vcapsrequired: vcapsrequired,	vnumbersallowed: vnumbersallowed,	vphonefield: vphonefield,	vdatefield: vdatefield,	vtimefield: vtimefield,	vnospaces: vnospaces,		// viewEffect constants	fxCheckerBoardEffect: fxCheckerBoardEffect, 	fxBarnDoorOpenEffect: fxBarnDoorOpenEffect,								  				fxBarnDoorCloseEffect: fxBarnDoorCloseEffect,	fxVenetianBlindsEffect: fxVenetianBlindsEffect, 	fxIrisOpenEffect: fxIrisOpenEffect,	fxIrisCloseEffect: fxIrisCloseEffect, 	fxPopDownEffect: fxPopDownEffect, 	fxDrawerEffect: fxDrawerEffect, 	fxZoomOpenEffect: fxZoomOpenEffect, 		fxZoomCloseEffect: fxZoomCloseEffect, 	fxZoomVerticalEffect: fxZoomVerticalEffect,		// viewFont constants	kfaceNormal: kfaceNormal,	kfaceBold: kfaceBold,	kfaceItalic: kfaceItalic,	kfaceUnderline: kfaceUnderline,	kfaceOutLine: kfaceOutline,	kfaceSuperscript: kfaceSuperScript,	kfaceSubscript: kfaceSubscript	});