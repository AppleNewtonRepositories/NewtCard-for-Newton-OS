func(exceptionblock)begin	print(exceptionblock);		local namestring:=sprintobject(exceptionblock.name);		local messagestring;	local errorstring:=clone(namestring&",");		local errorframe:=		{		|–48001|:" The PCMCIA card is not a data storage card",		|–48004|:" Store is corrupted, can't recover",		|–48005|:" Single object is corrupted, can't recover",		|–48009|:" Not a soup entry",		|–48011|:" Soup index has an unknown type",		|–48013|:" Soup index does not exist",		|–48014|:" A soup with this name already exists",		|–48016|:" Soup is invalid (probably from a removed store)",		|–48017|:" Soup is invalid (probably from a removed store)",		|–48018|:" Entry is invalid (probably from a removed store)",		|–48019|:" Key does not have the type specified in the index",		|–48020|:" Store is in ROM",		|–48022|:" Internal OS error–something unexpected happened",		|–48025|:" Discovered index inconsistency",		|–48026|:" Maximum number of soup tags reached",		|–48029|:" Store cannot handle the feature (for example, large objects)",		|–14001|:" Not implemented",		|–14002|:" Out of memory",		|–10202|:" Stack is corrupted",		|–10203|:" Stack overflow",		|–10204|:" Stack underflow",		|–10205|:" Address out of range",		|–30001|:" Not enough memory available to handle sound",		|–18000|:" Serial channel is in use",		|–18001|:" Memory error (serial)",		|–18002|:" Not current owner of the serial port",		|–44000|:" Printer problem",		|–44001|:" Newton is unable to print",		|–44002|:" No printer is connected",		|–44003|:" Printer busy",		|–44004|:" Printing stopped",		|–44005|:" Lost contact with the printer",		|–44006|:" Image too complex for printer",		|–44100|:" The next sheet of paper must be inserted",		|–44104|:" The printer has no paper",		|–44105|:" The printer has no ink",		|–44106|:" The printer is jammed",		|–44107|:" The printer door is open",		|–44108|:" The printer is off-line",			|–10502|:" Card not ready",		|–10503|:" Bad power on card",		|–10504|:" Unexpected card error",		|–10401|:" Bad package",		|–10402|:" Package already exists",		|–10404|:" Unexpected end of package",		|–10405|:" Unexpected end of package part",		|–10408|:" No such package exists",		|–10409|:" Newer package already exists",		|–10410|:" Newer version of application already installed",		|–10007|:" Not enough memory",		|–48214|:" Object is read-only",		|–48216|:" Out of heap memory",		|–48221|:" Reference to deactivated package",		|0|	  :" No error",		|–7000| :" Not enough memory available",		|–10600|:" Attempt to read or write outside of object bounds",		|–10602|:" Bad card access",		|–10604|:" Store not found",		|–10605|:" The store has been write-protected by the user",		|–10606|:" Object not found",		|–10612|:" Card is full",		|–10617|:" Card memory is full",		|–10618|:" Missing or low battery on SRAM card",		|–10621|:" Card needs recovery, but it is write-protected",		|–10622|:" Object too large for store",			};					if hasslot(exceptionblock,'message) then		errorstring:=errorstring&&exceptionblock.message;	if hasslot(exceptionblock,'error) then		errorstring:=errorstring&&"#"&exceptionblock.error&(errorframe.(intern(""&exceptionblock.error)));	if exceptionblock.data and exceptionblock.data.errorcode then		errorstring:=errorstring&&"#"&exceptionblock.data.errorcode;	if not strfilled(errorstring) then 		errorstring:="<no error information available>";					if strpos(namestring,"evt.ex.fr.store",0) then		messagestring:="a storage-related error has occured";	else if strpos(namestring,"evt.ex.comm",0) then		messagestring:="a communications-related error has occured";	else if strpos(namestring,"type.ref",0) then		messagestring:="a Newtonscript datatype error has occured";	else messagestring:="An unexpected error has occured";	return messagestring&&"("&errorstring&").";end;